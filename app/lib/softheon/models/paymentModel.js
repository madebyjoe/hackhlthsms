/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * The model sent to the client requests the details of a payment, or adds a
 * new payment
 * to the platform.
 *
 */
class PaymentModel {
  /**
   * Create a PaymentModel.
   * @member {number} [id] The unique ID of the payment.
   * @member {number} [accountId] The unique ID of the account that the payment
   * was made for.
   * @member {number} [paymentAmount] The payment amount.
   * @member {string} [description] The description of what was paid for.
   * @member {string} [referenceId] The client application provided reference
   * ID for the payment.
   * @member {object} [paymentMethod] The method of payment.
   * @member {string} [paymentMethod.paymentToken] The credit card or bank
   * account token that will be used for payment.
   * @member {string} [paymentMethod.type] The type of funding source that will
   * be used for the payment. Possible values include: 'Unknown', 'Credit
   * Card', 'ACH'
   * @member {object} [result] The result of the payment request.
   * @member {string} [result.status] The current status of the payment.
   * Possible values include: 'Unknown', 'New', 'Authorized', 'Captured',
   * 'Expired', 'Declined', 'Failed', 'Cancelled', 'Charge Back', 'Refunded',
   * 'Partially Refunded'
   * @member {string} [result.code] The payment result code.
   * @member {string} [result.message] The payment result message.
   * @member {string} [result.providerAccountId] The unique ID of the provider
   * account that was used to make this payment.
   * @member {string} [result.merchantTransactionId] Tthe merchant transaction
   * identifier.
   * @member {number} [result.merchantTransactionFee] The merchant transaction
   * fee.
   * @member {array} [refunds] Gets or sets the refund result.
   * @member {date} [createdDate] The timestamp indicating when the payment was
   * created.
   * @member {date} [modifiedDate] The timestamp indicating the last time that
   * the details of the payment were modified.
   */
  constructor() {
  }

  /**
   * Defines the metadata of PaymentModel
   *
   * @returns {object} metadata of PaymentModel
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'PaymentModel',
      type: {
        name: 'Composite',
        className: 'PaymentModel',
        modelProperties: {
          id: {
            required: false,
            serializedName: 'id',
            type: {
              name: 'Number'
            }
          },
          accountId: {
            required: false,
            serializedName: 'accountId',
            type: {
              name: 'Number'
            }
          },
          paymentAmount: {
            required: false,
            serializedName: 'paymentAmount',
            type: {
              name: 'Number'
            }
          },
          description: {
            required: false,
            serializedName: 'description',
            type: {
              name: 'String'
            }
          },
          referenceId: {
            required: false,
            serializedName: 'referenceId',
            type: {
              name: 'String'
            }
          },
          paymentMethod: {
            required: false,
            serializedName: 'paymentMethod',
            type: {
              name: 'Composite',
              className: 'PaymentMethodModel'
            }
          },
          result: {
            required: false,
            serializedName: 'result',
            type: {
              name: 'Composite',
              className: 'PaymentResultModel'
            }
          },
          refunds: {
            required: false,
            serializedName: 'refunds',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'RefundResultModelElementType',
                  type: {
                    name: 'Composite',
                    className: 'RefundResultModel'
                  }
              }
            }
          },
          createdDate: {
            required: false,
            serializedName: 'createdDate',
            type: {
              name: 'DateTime'
            }
          },
          modifiedDate: {
            required: false,
            serializedName: 'modifiedDate',
            type: {
              name: 'DateTime'
            }
          }
        }
      }
    };
  }
}

module.exports = PaymentModel;
